@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  @apply min-h-screen overscroll-none bg-gray-100 text-slate-600 dark:bg-slate-800 dark:text-slate-300;
}

:where(td) {
  padding: 0;
}

@layer components {
  .button-icon {
    @apply m-1 select-none rounded-lg p-2 font-semibold transition hover:fill-current active:scale-90;
  }

  .button-icon.active svg:not(.dark *),
  .button-icon:hover svg:not(.dark *),
  .button-icon:focus svg:not(.dark *) {
    @apply fill-white;
  }

  .button-icon:not(.active):not(:hover):not(:focus) {
    @apply bg-transparent;
  }

  .button-icon-wide:not(:hover):not(:focus) {
    @apply bg-white dark:bg-slate-800;
  }

  [data-tooltip] {
    @apply relative outline-none ring-current focus-visible:ring-2 active:ring-0;
  }

  [data-tooltip]::before {
    @apply pointer-events-none absolute top-full left-1/2 z-10 mt-3 block -translate-x-1/2 scale-90 rounded-lg border bg-white py-2 px-4 opacity-0 shadow-lg transition content-[attr(data-tooltip)] dark:border-gray-700 dark:bg-slate-900;
  }

  [data-tooltip="%href%"]::before {
    @apply content-[attr(href)];
  }

  [data-tooltip]:hover::before,
  [data-tooltip]:focus-visible::before {
    @apply scale-100 opacity-100;
  }

  @media (hover: hover) {
    .mobile-nav {
      @apply hover:visible hover:scale-100 hover:bg-purple-500;
    }
  }

  :where(.mobile-nav) {
    @apply origin-top scale-90 opacity-0;
  }

  .field {
    @apply rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm outline-0 transition;
    @apply focus-within:border focus-within:border-blue-500 focus-within:ring focus-within:ring-blue-200;
    @apply dark:border-slate-600 dark:bg-slate-850;
    @apply dark:focus-within:border-blue-500 dark:focus-within:ring-blue-900;
    @apply placeholder:text-slate-400 dark:placeholder:text-slate-500;
  }

  .field-group:where(:not(.flex:not(.flex-col)))
    > :where(
      .field:not(.degroup):not(:first-child):not(p:not(.field) + *):not(
          .degroup + *
        )
    ) {
    @apply -mt-[1px] rounded-t-none;
  }

  .field-group:not(.flex:not(.flex-col))
    > .field:not(.degroup):not(:last-child):not(:has(+ .degroup)) {
    @apply rounded-b-none;
  }

  .field-group-row
    > .field:not(.degroup):not(:first-child):not(p:not(.field) + *):not(
      .degroup + *
    ) {
    @apply -ml-[1px] rounded-l-none;
  }

  .field-group-row
    > .field:not(.degroup):not(:last-child):not(:has(+ .degroup)) {
    @apply rounded-r-none;
  }

  .field-group > :not(p) + .degroup,
  .field-group > p.field + .degroup {
    @apply mt-4;
  }

  .field-group > .degroup:has(+ :not(p)),
  .field-group > .degroup:has(p.field) {
    @apply mb-4;
  }

  .field-group,
  .field-group-row {
    > .field:focus,
    > .field:hover {
      @apply relative z-10;
    }
  }

  .field[type="file"] {
    @apply cursor-pointer focus:outline-none;
  }

  .field::-webkit-file-upload-button {
    @apply mr-6 cursor-pointer appearance-none border-0 bg-transparent py-0 text-inherit;
  }

  .field::-webkit-inner-spin-button {
    @apply hidden;
  }

  :where(a).field,
  :where(button.field):enabled {
    @apply hover:border-gray-400 hover:bg-gray-200 hover:focus-within:border-blue-500;
    @apply dark:hover:border-slate-500 dark:hover:bg-slate-700 dark:hover:focus-within:border-blue-500;
  }

  .ring-color {
    @apply focus-visible:border-blue-500 focus-visible:ring-blue-200;
    @apply dark:focus-visible:border-blue-500 dark:focus-visible:ring-blue-900;
  }

  .ring-color-initial {
    @apply border-blue-500 ring-blue-200;
    @apply dark:border-blue-500 dark:ring-blue-900;
  }

  :where(select).field {
    @apply w-full;
  }

  :where(select).field.sr-only {
    @apply prefer-w-96;
  }

  :where(a).field {
    @apply flex items-center justify-center text-center;
  }

  .field:disabled {
    @apply opacity-30;
  }

  .dark .field[type="date"]::-webkit-calendar-picker-indicator {
    @apply invert;
  }

  .label > p:not(.field) {
    @apply mb-1 select-none;
  }

  .label + .label {
    @apply mt-4;
  }

  .label:has(:required) > p:not(.field):first-of-type::after {
    @apply ml-1 text-red-500 content-["*"];
  }

  .stats {
    @apply text-slate-500 dark:text-slate-400;
  }

  .stats strong {
    @apply text-slate-900 dark:text-slate-300;
  }

  .link {
    @apply py-2 text-blue-600 underline decoration-transparent underline-offset-2 transition hover:decoration-inherit focus:outline-none focus-visible:decoration-inherit dark:text-blue-500;
  }

  .help svg {
    @apply mb-1 h-4 w-4;
  }

  .label > .help {
    @apply -mt-6 flex;
  }

  .label > .help svg {
    @apply ml-auto mr-1;
  }

  .help::before {
    @apply w-[calc(100%_-_4rem)] max-w-full;
  }

  .rta-button + .rta-button {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .rta-button:has(+ .rta-button) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  :where(.prose),
  :where(.prose) :where(.ProseMirror) {
    line-height: 1.5;

    [contenteditable] {
      outline: none;
    }

    p {
      margin-bottom: 1rem;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin-top: 1.5rem;
      margin-bottom: 1rem;
      font-weight: 600;
      line-height: 1.25;
    }

    h1,
    h2 {
      padding-bottom: 0.3rem;
      border-bottom-width: 1px;
      @apply border-gray-300 dark:border-slate-600;
    }

    h1 {
      margin: 0.67rem 0;
      @apply text-2xl;
    }

    h2 {
      @apply text-xl;
    }

    h4,
    h5,
    h6 {
      @apply text-gray-500 dark:text-slate-450;
    }

    h5 {
      font-size: 0.875rem;
    }

    h6 {
      font-size: 0.85rem;
    }

    ul,
    ol {
      margin-bottom: 1rem;
      padding-left: 2rem;
    }

    ul {
      list-style: disc;
    }

    ol {
      list-style: numbered;

      ol {
        list-style: lower-alpha;
        padding-left: 1.5rem;

        ol {
          list-style: lower-roman;
        }
      }
    }

    li > p {
      margin-bottom: 0;
    }

    li + li {
      margin-top: 0.25rem;
    }

    li ul,
    li ol {
      margin-top: 0.25rem;
      margin-bottom: 0;
    }

    > ul,
    > ol {
      li:last-child {
        > ul:last-child,
        > ol:last-child {
          margin-bottom: 0 !important;
        }
      }
    }

    pre {
      margin: 0;
      margin-bottom: 1rem;
      padding: 1rem;
      overflow: auto;
      line-height: 1.45;
      border-radius: 0.375rem;
      @apply bg-white shadow-md dark:bg-slate-850;

      &:is(.ProseMirror pre) {
        @apply bg-gray-200 shadow-none dark:bg-slate-700;
      }
    }

    code {
      margin: 0;
      padding: 0.2rem 0.4rem;
      font-size: 85%;
      font-family: ui-monospace, "SFMono-Regular", "SF Mono", "Menlo",
        "Consolas", "Liberation Mono", monospace;
      border-radius: 0.375rem;
      @apply bg-white shadow-md dark:bg-slate-850;

      &:is(.ProseMirror code) {
        @apply bg-gray-200 shadow-none dark:bg-slate-700;
      }

      &:is(pre code) {
        @apply shadow-none;
      }
    }

    pre code {
      padding: 0;
      overflow: visible;
      line-height: inherit;
      white-space: pre;
      word-wrap: normal;
      word-break: normal;
      background-color: transparent;
    }

    hr {
      margin: 0;
      margin-bottom: 1rem;
      border-width: 0;
      border-top-width: 4px;
      @apply border-gray-300 dark:border-slate-600;
    }

    q {
      font-style: italic;
    }

    blockquote {
      margin: 0;
      margin-bottom: 1rem;
      padding: 0 1rem;
      border-left-width: 0.25rem;
      @apply text-gray-500 dark:text-slate-450;
      @apply border-gray-300 dark:border-slate-600;

      > :first-child {
        margin-top: 0 !important;
      }

      > :last-child {
        margin-bottom: 0 !important;
      }
    }

    a {
      @apply text-blue-600 underline-offset-2 dark:text-blue-500;

      &:is(.ProseMirror a) {
        @apply underline;
      }

      @media (pointer: fine) {
        &:hover {
          text-decoration: underline;
        }
      }
    }

    img {
      margin-bottom: -0.375rem;
    }

    s {
      text-decoration: line-through !important;
    }

    > :first-child {
      margin-top: 0 !important;
    }

    > :last-child {
      margin-bottom: 0 !important;
    }
  }

  .icon-label {
    @apply relative -top-[0.125rem] mr-1 inline h-[1em] w-[1em] text-gray-350 dark:text-slate-500;
  }

  :where(.red) .icon-label {
    @apply text-red-300 dark:text-red-500;
  }
}

:root.no-transitions *,
:root.no-transitions ::before,
:root.no-transitions ::after {
  transition: none !important;
}

.ProseMirror {
  @apply flex-1 outline-none;
}

.rta .ProseMirror::after {
  content: var(--placeholder);
  @apply relative -top-6 text-slate-400 dark:text-slate-500;
}
